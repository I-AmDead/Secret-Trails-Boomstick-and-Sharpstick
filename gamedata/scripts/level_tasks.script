function add_location(sid, location, hint)
    local sim = alife()
    if sim then
        local obj = alife():story_object(sid)
        if obj then
            level.map_add_object_spot(obj.id, location, hint or "")
        end
    end
end

function add_location_by_id(id, location, hint)
    local sim = alife()
    if sim then
        local obj = alife():object(id)
        if obj then
            add_location_internal(id, location, hint)
        end
    end
end

function add_location_internal(id, location, hint)
    if hint then
        level.map_add_object_spot_ser(id, location, hint)
    else
        level.map_add_object_spot_ser(id, location, "")
    end
end

function remove_location(sid, location)
    local sim = alife()
    if sim then
        local obj = alife():story_object(sid)
        if obj and level.map_has_object_spot(obj.id, location) then
            level.map_remove_object_spot(obj.id, location)
        end
    end
end

function remove_location_by_id(id, location, single)
    local sim = alife()
    if sim then
        local obj = alife():object(id)
        if obj then
            level.map_remove_object_spot(id, location)
            if not single then
                for a = 1, level.map_has_object_spot(id, location), 1 do
                    level.map_remove_object_spot(id, location)
                end
            end
        end
    end
end

function remove_location_by_sid(sid, location, single)
    local sim = alife()
    if sim then
        local obj = alife():story_object(sid)
        if obj then
            level.map_remove_object_spot(obj.id, location)
            if not single then
                for a = 1, level.map_has_object_spot(obj.id, location), 1 do
                    level.map_remove_object_spot(obj.id, location)
                end
            end
        end
    end
end

function is_map_spot_present(sid, location)
    local sim = alife()
    if sim then
        local obj = alife():story_object(sid)
        if obj and level.map_has_object_spot(obj.id, location) ~= 0 then
            return true
        end
    end
    return false
end

function set_task_state(id_state, id_task, id_subtask)
    if db.actor then
        db.actor:set_task_state(id_state, id_task, id_subtask)
    end
end

function add_lchanger_location()
    -- escape
    local obj = alife():story_object(91)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l02_garbage")
    end
    -- garbage
    obj = alife():story_object(192)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l03_agroprom")
    end
    obj = alife():story_object(193)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l01_escape")
    end
    obj = alife():story_object(194)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l05_bar")
    end
    obj = alife():story_object(196)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l04_darkvalley")
    end

    -- agroprom
    obj = alife():story_object(392)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l02_garbage")
    end

    -- darkvalley
    obj = alife():story_object(416)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l02_garbage")
    end

    -- bar
    obj = alife():story_object(592)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l07_military")
    end
    obj = alife():story_object(593)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l02_garbage")
    end

    -- rostok
    obj = alife():story_object(608)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l08_yantar")
    end

    -- radar
    obj = alife():story_object(1007)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l11_pripyat")
    end
    obj = alife():story_object(1008)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l07_military")
    end

    -- pripyat
    obj = alife():story_object(832)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l12_stancia")
    end
    obj = alife():story_object(833)
    if obj then
        add_location_by_id(obj.id, "level_changer", "to_l10_radar")
    end
end
