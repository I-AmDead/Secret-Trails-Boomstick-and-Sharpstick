local function del_phobj()
    --delete_obj("light_uglovaya_1_glass_0006") -- мб перестала баговать уже?
    delete_obj("sar_physic_destroyable_object_0085")
    delete_obj("mil_awr_lamp_mil_smart_terrain_7_7_freedom_mechanic_stalker_01")
    delete_obj("mil_awr_lamp_mil_smart_terrain_7_7_freedom_mechanic_stalker_02")
    delete_obj("mil_physic_object_0022")
    delete_obj("mil_physic_object_0023")
    delete_obj("mil_physic_object_0024")
    delete_obj("mil_physic_object_0026")
    delete_obj("mil_physic_object_0030")
    delete_obj("mil_physic_object_0032")
    delete_obj("mil_physic_object_0044")
    delete_obj("door_trader_box_0000")
    delete_obj("door_trader_box_0001")
    delete_obj("door_trader_box_0002")
    delete_obj("door_trader_box_0003")
    delete_obj("door_trader_box_0004")
    delete_obj("door_trader_box_0005")
    delete_obj("door_trader_box_0006")
    delete_obj("door_trader_box_0007")
    delete_obj("door_trader_box_0008")
    delete_obj("door_trader_box_0009")
    delete_obj("door_trader_box_0010")
    delete_obj("door_trader_box_0011")
    delete_obj("level_prefix_physic_destroyable_object_0005")
    delete_obj("level_prefix_physic_destroyable_object_0006")
end

function delete_obj(name)
    local obj = alife():object(name)
    if obj then
        alife():release(obj, true)
    end
end

function start_quest()
    ogse_st_mgr.start_conditional_visual_timer(nil, 17 * 60, script_name() .. ".quest_complete", script_name() .. ".quest_fail")
end

function quest_complete()
    return has_alife_info("pobeg_finish")
end

function quest_fail()
    if has_alife_info("pobeg_start") and not has_alife_info("pobeg_finish") then
        db.actor:give_info_portion("pobeg_net")
    end
end

local gas_lamp_list = {}
local function gas_light_flare()
    if ogse.var_exists("gas_lamp_list") then
        gas_lamp_list = ogse.load_var("gas_lamp_list")
    else
        for a = 1, 65534 do
            local obj = level.object_by_id(a)
            if obj and string.find(obj:name(), "light_gas_r2") then
                table.insert(gas_lamp_list, a)
            end
        end
    end

    for _, id in pairs(gas_lamp_list) do
        local obj = level.object_by_id(id)
        if obj then
            obj:get_hanging_lamp():set_flare(false)
        end
    end

    ogse.save_var("gas_lamp_list", gas_lamp_list)
end

local uglovaya_lamp_list = {}
local function uglovaya_light_params()
    if ogse.var_exists("uglovaya_lamp_list") then
        uglovaya_lamp_list = ogse.load_var("uglovaya_lamp_list")
    else
        for a = 1, 65534 do
            local obj = level.object_by_id(a)
            if obj and string.find(obj:name(), "light_uglovaya_1") then
                table.insert(uglovaya_lamp_list, a)
            end
        end
    end

    for _, id in pairs(uglovaya_lamp_list) do
        local obj = level.object_by_id(id)
        if obj then
            local pk = get_netpk(obj, 1)
            ASSERT(pk and pk:isOk(), "can't read netpacket of %s", obj:name())
            local data = pk:get()
            local props =
            {
                [ "main_color"          ] = tonumber("0xffffffff", 16),
                [ "main_brightness"     ] = 0.3,
                [ "light_flags"         ] = tonumber("0x2a", 16)
            }
            log3("obj %s props %s", obj:name(), props)
            for k, v in pairs(props) do
                data[k] = v
            end
            pk:set(data)
        end
    end

    ogse.save_var("uglovaya_lamp_list", uglovaya_lamp_list)
end

local function fix_lc_pripyat_aes()
    if ogse.var_exists("fix_lc_pripyat_aes") then
        return
    end

    local obj = alife():story_object(832)
    if obj then
        local lc = obj:get_level_changer()
        lc.dest_game_vertex_id = 2399
        lc.dest_level_vertex_id = 414957
        lc.dest_position = vector():set(918.561, -0.102, -393.141)
        ogse.save_var("fix_lc_pripyat_aes", true)
    end
end

local function fix_lc_radar_millitary()
    if ogse.var_exists("fix_lc_radar_millitary") then
        return
    end

    local obj = alife():story_object(1008)
    if obj then
        local lc = obj:get_level_changer()
        lc.dest_game_vertex_id = 1808
        lc.dest_level_vertex_id = 357153
        lc.dest_position = vector():set(81.863, -12.047, 405.985)
        ogse.save_var("fix_lc_radar_millitary", true)
    end
end

local function fix_lc_garbage_escape()
    if ogse.var_exists("fix_lc_garbage_escape") then
        return
    end

    local obj = alife():story_object(193)
    if obj then
        local lc = obj:get_level_changer()
        lc.dest_game_vertex_id = 208
        lc.dest_level_vertex_id = 322877
        lc.dest_position = vector():set(15.150, 16.441, 684.726)
        ogse.save_var("fix_lc_garbage_escape", true)
    end
end

local function fix_lc_escape_garbage()
    if ogse.var_exists("fix_lc_escape_garbage") then
        return
    end

    local obj = alife():story_object(91)
    if obj then
        local lc = obj:get_level_changer()
        lc.dest_game_vertex_id = 252
        lc.dest_level_vertex_id = 195803
        lc.dest_position = vector():set(36.650, 2.137, -303.579)
        ogse.save_var("fix_lc_escape_garbage", true)
    end
end

local function fix_agr_und_agr()
    if ogse.var_exists("fix_agr_und_agr1") then
        return
    end

    local obj = alife():object("exit_to_agroprom_06")
    if obj then
        local lc = obj:get_level_changer()
        lc.dest_game_vertex_id = 469
        lc.dest_level_vertex_id = 180544
        lc.dest_position = vector():set(-20.730, -0.203, 34.239)
        ogse.save_var("fix_agr_und_agr1", true)
    end
end

local function on_drag_drop(obj)
    local section = obj:section()

    if not (db.actor:item_in_slot(6) and db.actor:item_in_slot(6):section() == "nano_outfit") then
        return
    end
    if not (section and (section == "af_buliz" or section == "af_spirit_4")) then
        return
    end

    if section == "af_buliz" and new_dialog.count_item("af_buliz", 5) then
        news_manager.send_tip(db.actor, game.translate_string("nano_mod_complete_w"))
        ogse.remove_inv_items_by_section(section, 5)
        ogse.remove_inv_items_by_section(db.actor:item_in_slot(6):section())
        ogse.spawn_item_in_inv("nano_outfit_addw")
        local snd_obj = xr_sound.get_safe_sound_object([[interface\inv_slot]])
        snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 0.7)
    elseif section == "af_spirit_4" and new_dialog.count_item("af_spirit_4", 5) then
        news_manager.send_tip(db.actor, game.translate_string("nano_mod_complete_h"))
        ogse.remove_inv_items_by_section(section, 5)
        ogse.remove_inv_items_by_section(db.actor:item_in_slot(6):section())
        ogse.spawn_item_in_inv("nano_outfit_addh")
        local snd_obj = xr_sound.get_safe_sound_object([[interface\inv_slot]])
        snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 0.7)
    end
end

local function fix_first()
    del_phobj()
    swamp_secret()
    ded_luck()
    ded_secret()
    gas_light_flare()
    uglovaya_light_params()
end

local function spawn_sverhprovodnik()
    if db.actor:has_info("sverhprovodnik_dialog_done") or db.actor:dont_has_info("sverhprovodnik_dialog_start") or db.actor:object("sverhprovodnik") then return end

    local time = level.get_time_hours()

    if time >= 1 and time < 2 and db.actor:dont_has_info("sverhprovodnik_spawn") then
        local obj = alife_create("sverhprovodnik", "l07_military", vector():set(-268.297, -18.055, -25.109))
        alife():assign_story_id(obj.id, story_ids.sverhprovodnik)
        db.actor:give_info_portion("sverhprovodnik_spawn")
    end

    if db.actor:has_info("sverhprovodnik_spawn") and time >= 2 then
        local obj = alife():story_object(story_ids.sverhprovodnik)
        if obj then
            alife():release(obj, true)
            db.actor:disable_info_portion("sverhprovodnik_spawn")
        end
    end
end

local function swamp_secret()
	if ogse.var_exists("SWAMP_SECRET") then return end
	local sobj = alife():create("swamp_secret", vector():set(-252.122940, -5.423657, 53.645744), 646368, 2999)
	ogse.save_var("SWAMP_SECRET", true)
end

local function ded_luck()
	if ogse.var_exists("DED_LUCK") then return end
	local sobj = alife_create("ded_luck_pick", "l09_deadcity", vector():set(-136.46, 1.08, -68.83))
	sobj.angle = vector():set(0, 0.610865, 0)

	local sobj = alife_create("ded_luck", "l09_deadcity", vector():set(15.05, 1.25, -100.90))
	sobj.angle = vector():set(0, 0.610865, 0)
	local sobj = alife_create("ded_luck", "l09_deadcity", vector():set(-2.75, 1.25, -100.90))
	sobj.angle = vector():set(0, 0.610865, 0)
	local sobj = alife_create("ded_luck", "l09_deadcity", vector():set(-30.35, 1.41, -100.90))
	sobj.angle = vector():set(0, 0.610865, 0)
	local sobj = alife_create("ded_luck", "l09_deadcity", vector():set(-28.25, 1.43, -101.00))
	sobj.angle = vector():set(0, 0.610865, 0)
	local sobj = alife_create("ded_luck", "l09_deadcity", vector():set(-59.55, 1.42, -100.90))
	sobj.angle = vector():set(0, 0.610865, 0)
	local sobj = alife_create("ded_luck", "l09_deadcity", vector():set(-61.65, 1.43, -100.90))
	sobj.angle = vector():set(0, 0.610865, 0)
	local sobj = alife_create("ded_luck", "l09_deadcity", vector():set(-136.06, 1.28, -103.39))
	sobj.angle = vector():set(0, 0.610865, 0)
	local sobj = alife_create("ded_luck", "l09_deadcity", vector():set(-136.16, 1.28, -105.59))
	sobj.angle = vector():set(0, 0.610865, 0)
	local sobj = alife_create("ded_luck", "l09_deadcity", vector():set(-136.16, 1.27, -126.98))
	sobj.angle = vector():set(0, 0.610865, 0)
	ogse.save_var("DED_LUCK", true)
end

local function ded_secret()
	if ogse.var_exists("DED_SECRET") then return end

	-- Тайник
	alife_create("dead_city_secret", "l09_deadcity", vector():set(-75.54, -1.32, -99.06))

	-- Скелеты
	local sobj = alife_create("skelet_5", "l09_deadcity", vector():set(-75.72, -1.82, -101.18))
	sobj.angle = vector():set(0, 3.14, 0)


	ogse.save_var("DED_SECRET", true)
end

local function spawn_ostrov_zone()
    ogsr_cop_zone.spawn_anomaly('zone_ostrov', vector():set(-25.971, 0.061, 724.767), 178968, 2618, 1, 1)
    ogsr_cop_zone.spawn_anomaly('zone_monolit', vector():set(-25.913, 0.005, 693.582), 178968, 2618, 1, 1)
    ogsr_cop_zone.spawn_anomaly('zone_zharka_new', vector():set(-30.974, 0.002, 693.734), 178968, 2618, 1, 1)
    ogsr_cop_zone.spawn_anomaly('zone_zharka_new', vector():set(-20.851, 0.000, 693.588), 178968, 2618, 1, 1)
    ogsr_cop_zone.spawn_anomaly('zone_zharka_new', vector():set(-26.064, 0.000, 698.637), 178968, 2618, 1, 1)
    ogsr_cop_zone.spawn_anomaly('zone_zharka_new', vector():set(-22.007, 0.000, 696.746), 178968, 2618, 1, 1)
    ogsr_cop_zone.spawn_anomaly('zone_zharka_new', vector():set(-30.150, 0.004, 696.339), 178968, 2618, 1, 1)
    ogsr_cop_zone.spawn_anomaly('zone_zharka_new', vector():set(-29.990, 0.000, 690.576), 178968, 2618, 1, 1)
    ogsr_cop_zone.spawn_anomaly('zone_zharka_new', vector():set(-22.360, 0.000, 689.950), 178968, 2618, 1, 1)
end

function spawn_zharts()
    braad_test.spawn_ai_location("af_caterpillar", vector():set(-21.454, 0.000, 691.907), "l12_stancia_2")
    braad_test.spawn_ai_location("af_caterpillar", vector():set(-21.387, 0.000, 695.361), "l12_stancia_2")
    braad_test.spawn_ai_location("af_caterpillar", vector():set(-23.613, 0.000, 697.631), "l12_stancia_2")
    braad_test.spawn_ai_location("af_caterpillar", vector():set(-28.252, 0.000, 697.471), "l12_stancia_2")
    braad_test.spawn_ai_location("af_caterpillar", vector():set(-30.788, 0.000, 694.339), "l12_stancia_2")
    braad_test.spawn_ai_location("af_caterpillar", vector():set(-30.405, 0.000, 692.153), "l12_stancia_2")
end

local function death_npc_item(npc)
    if npc:name() == "esc_shilo_band" then
        ogse.spawn_item_in_inv("part6", npc)
        ogse.spawn_item_in_inv("money_gg", npc)
        ogse.spawn_item_in_inv("wpn_mp155", npc)
    end
    if npc:name() == "fedya_razboinik" then
        ogse.spawn_item_in_inv("amulet_1", npc)
    end
    if npc:name() == "solomon" then
        db.actor:give_info_portion("haron_need_stalker_fail")
    end
    if string.find(npc:name(), "mathon") then
        db.actor:give_info_portion("haron_naem_fail")
    end
    if string.find(npc:name(), "new_prizrak") then
        db.actor:give_info_portion("prizrak_help_fail")
    end
    if string.find(npc:name(), "mil_lucash") then
        db.actor:give_info_portion("mil_lucash_dead")
    end
    if string.find(npc:name(), "mil_blockpost_leader") then
        db.actor:give_info_portion("mil_blockpost_leader_dead")
    end
    if string.find(npc:name(), "mil_stukach") then
        db.actor:give_info_portion("mil_stukach_dead")
    end
    if string.find(npc:name(), "mil_trader") then
        db.actor:give_info_portion("mil_trader_dead")
    end
    if string.find(npc:name(), "mil_engineer") then
        db.actor:give_info_portion("mil_engineer_dead")
    end
    if string.find(npc:name(), "mil_cook") then
        db.actor:give_info_portion("mil_cook_new_dead")
    end
    if npc:name() == "bes" then
        db.actor:give_info_portion("bes_dead")
    end
    if string.find(npc:name(), "garbage_stalker_wound") then
        db.actor:give_info_portion("garbage_stalker_wound_dead")
    end
    if string.find(npc:name(), "mil_osvedomitel") then
        db.actor:give_info_portion("mil_osvedomitel_dead")
    end
    if string.find(npc:name(), "clear_scy_leader") then
        db.actor:give_info_portion("sviblov_dead")
    end
    if string.find(npc:name(), "esc_krest_bratok") then
        db.actor:give_info_portion("krest_dead")
    end
    if string.find(npc:name(), "atp_barman") then
        db.actor:give_info_portion("band_kill_have")
    end
end

local function fix_new_first()
    ded_luck()
    ded_secret()
    fix_lc_pripyat_aes()
    fix_lc_radar_millitary()
    fix_lc_garbage_escape()
    fix_lc_escape_garbage()
    fix_agr_und_agr()
    gas_light_flare()
    uglovaya_light_params()
end

local show_engine_legs
function show_legs()
    swm_legs.show_legs()
    if show_engine_legs then
        cmd("g_first_person_body on")
        show_engine_legs = nil
    end
end

function hide_legs()
    if get_con_bool("g_first_person_body") then
        cmd("g_first_person_body off")
        show_engine_legs = true
    end
    swm_legs.hidden_legs()
end

function attach(sm)
    --sm:subscribe({signal = "on_spawn",          fun = on_spawn})
    sm:subscribe({signal = "on_first_update",   fun = fix_new_first})
    sm:subscribe({signal = "on_update",         fun = spawn_sverhprovodnik})
    sm:subscribe({signal = "on_fake_drag_drop", fun = on_drag_drop})
    sm:subscribe({signal = "on_npc_death",      fun = death_npc_item})
end